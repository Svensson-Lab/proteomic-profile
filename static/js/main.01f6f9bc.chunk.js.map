{"version":3,"sources":["assets/dna_loader.svg","components/DNALoader/DNALoader.jsx","assets/background_top.svg","assets/background_bottom.svg","components/Landing/Landing.jsx","util.js","store/types.js","store/actions.js","components/Upload/Upload.jsx","App.jsx","store/reducers.js","store/index.js","store.js","index.js"],"names":["DNALoader","Container","fluid","className","src","DNASpinner","alt","Landing","backgroundTop","to","smooth","duration","Button","backgroundBottom","isDigit","c","LOADING_START","LOADING_END","THROW_ERROR","UPLOAD_FILE","REMOVE_FILE","SELECT_SHEET","REMOVE_SHEET","SELECT_COLUMN","REMOVE_COLUMN","SET_UNIPROT_IDS","GET_PROFILE","UPDATE_PROGRESS","removeColumn","type","types","Upload","dispatch","useDispatch","uploaded","useSelector","state","data","workbook","sheet","hiddenFileInput","React","useRef","empty","changeSheet","event","sheet_name","target","value","payload","changeColumn","column_name","parseColumnIndex","column_index","i","slice","id","Fragment","Form","Group","Control","as","onChange","SheetNames","map","index","Object","keys","Sheets","v","onClick","current","click","ref","reader","FileReader","onload","Uint8Array","result","XLSX","read","readAsArrayBuffer","files","uploadFile","accept","style","display","App","loading","base","useEffect","setTimeout","initialBaseState","error","baseReducer","action","initialDataState","column","uniprot_ids","locations","progress","dataReducer","createRootReducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01f6f9bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dna_loader.4c4bb697.svg\";","import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport DNASpinner from '../../assets/dna_loader.svg';\nimport './DNALoader.scss';\n\nconst DNALoader = () => (\n  <Container fluid className='loading'>\n    <img src={DNASpinner} alt='Spinning dotted DNA loader.'/>\n    <h6>Loading...</h6>\n  </Container>\n)\n\nexport default DNALoader;","export default __webpack_public_path__ + \"static/media/background_top.47af2133.svg\";","export default __webpack_public_path__ + \"static/media/background_bottom.6ad4e379.svg\";","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-scroll';\nimport backgroundTop from '../../assets/background_top.svg';\nimport backgroundBottom from '../../assets/background_bottom.svg';\nimport './Landing.scss';\n\nconst Landing = () => (\n  <div className='landing'>\n    <div className='background-top-container'>\n      <img src={backgroundTop} className = 'background-top' alt='Network graphic - top portion.'/>\n    </div>\n    <div className='landing-text'>\n      <h1>Automatic Proteomic Profiler</h1>\n      <p>An online tool for selecting proteins based on their subcellular location.</p>\n      <Link to='upload' smooth={true} duration={500}>\n        <Button><h6>Get Started</h6></Button>\n      </Link>\n    </div>\n    <div className='background-bottom-container'>\n      <img src={backgroundBottom} className='background-bottom' alt='Network graphic - bottom portion.'/>\n    </div>\n  </div>\n)\n\nexport default Landing;","export const isDigit = c => c >= '0' && c <= '9';","export const LOADING_START = 'LOADING_START';\nexport const LOADING_END = 'LOADING_END';\nexport const THROW_ERROR = 'THROW_ERROR';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\nexport const REMOVE_FILE = 'REMOVE_FILE';\nexport const SELECT_SHEET = 'SELECT_SHEET';\nexport const REMOVE_SHEET = 'REMOVE_SHEET';\nexport const SELECT_COLUMN = 'SELECT_COLUMN';\nexport const REMOVE_COLUMN = 'REMOVE_COLUMN';\nexport const SET_UNIPROT_IDS = 'SET_UNIPROT_IDS';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const UPDATE_PROGRESS = 'UPDATE_PROGRESS';","import XLSX from 'xlsx';\nimport * as types from './types';\n\nexport const loadingStart = () => ({\n  type: types.LOADING_START\n});\n\nexport const loadingEnd = () => ({\n  type: types.LOADING_END\n});\n\nexport const throwError = error => ({\n  type: types.THROW_ERROR,\n  payload: error\n});\n\nexport const uploadFile = event => dispatch => {\n  const reader = new FileReader();\n  reader.onload = event => {\n    const data = new Uint8Array(event.target.result);\n    const workbook = XLSX.read(data, {type: 'array'});\n    dispatch({\n      type: types.UPLOAD_FILE,\n      payload: workbook\n    });\n  }\n  reader.readAsArrayBuffer(event.target.files[0]);\n}\n\nexport const selectSheet = sheet_name => ({\n  type: types.SELECT_SHEET,\n  payload: sheet_name\n});\n\nexport const removeSheet = () => ({\n  type: types.REMOVE_SHEET\n});\n\nexport const selectColumn = column_name => ({\n  type: types.SELECT_COLUMN,\n  payload: column_name\n});\n\nexport const removeColumn = () => ({\n  type: types.REMOVE_COLUMN\n});","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {isDigit} from '../../util';\nimport {\n  uploadFile,\n  selectSheet,\n  removeSheet,\n  selectColumn,\n  removeColumn\n} from '../../store/actions';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './Upload.scss';\n\nconst Upload = () => {\n  const dispatch = useDispatch();\n  const uploaded = useSelector(state => state.data.uploaded);\n  const workbook = useSelector(state => state.data.workbook);\n  const sheet = useSelector(state => state.data.sheet);\n  //const column = useSelector(state => state.data.column);\n  const hiddenFileInput = React.useRef(null);\n\n  const empty = '- - -';\n  const changeSheet = event => {\n    dispatch(removeColumn());\n    if (event.target.value === empty) {\n      dispatch(removeSheet());\n    } else {\n      dispatch(selectSheet(event.target.value));\n    }\n  }\n  const changeColumn = event => {\n    if (event.target.value === empty) {\n      dispatch(removeColumn());\n    } else {\n      dispatch(selectColumn(event.target.value));\n    }\n  }\n  const parseColumnIndex = column_index => {\n    let i = 0;\n    while (!isDigit(column_index[i])) ++i;\n    return column_index.slice(0, i);\n  }\n\n  return (\n    <div className='upload' id='upload'>\n      <div className='upload-instructions'>\n        <h1>How it Works</h1>\n        <ol>\n          <li>\n            <p>Upload an Excel spreadsheet containing the UniProt IDs of your genes of interest in a column.</p>\n          </li>\n          <li>\n            <p>Select the page and column in the spreadsheet containing the UniProt IDs</p>\n          </li>\n          <li>\n            <p>Select which subcellular locations you want to filter in the list</p>\n          </li>\n          <li>\n            <p>Run the program to save the column marking the genes that fit your criteria!</p>\n          </li>\n        </ol>\n      </div>\n      {!uploaded\n        ? <div className='upload-form'>\n            <Button className='upload-button' onClick={event => hiddenFileInput.current.click()}>\n              <h6>Upload a File</h6>\n              <input\n                type='file'\n                ref={hiddenFileInput}\n                onChange={event => dispatch(uploadFile(event))}\n                accept='.xls, .xlsx, .xlsm'\n                style={{display: 'none'}}\n              />\n            </Button>\n          </div>\n        : <React.Fragment>\n            <div className='choose-sheet'>\n              <h4>Choose a Sheet</h4>\n              <Form>\n                <Form.Group>\n                  <Form.Control as='select' onChange={event => changeSheet(event)}>\n                    <option>{empty}</option>\n                    {workbook.SheetNames.map((sheet_name, index) => (\n                      <option key={index}>{sheet_name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n            </div>\n            {sheet !== null\n              ? <div className='choose-column'>\n                  <h4>Choose the Column Containing the UniProt IDs</h4>\n                  <Form>\n                    <Form.Group>\n                      <Form.Control as='select' onChange={event => changeColumn(event)}>\n                        <option>{empty}</option>\n                        {Object.keys(workbook.Sheets[sheet]).map((column_index, index) => (\n                          column_index.slice(-1) === '1' && !isDigit(column_index.slice(-2, -1))\n                            ? <option key={column_index}>\n                                {`${parseColumnIndex(column_index)}: ${workbook.Sheets[sheet][column_index].v}`}\n                              </option>\n                            : null\n                        ))}\n                      </Form.Control>\n                    </Form.Group>\n                  </Form>\n                </div>\n              : null\n            }\n          </React.Fragment>\n      }\n    </div>\n  );\n}\n\nexport default Upload;","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport DNALoader from './components/DNALoader/DNALoader';\nimport Landing from './components/Landing/Landing';\nimport Upload from './components/Upload/Upload';\nimport './App.scss';\nimport {loadingStart, loadingEnd} from './store/actions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.base.loading);\n\n  useEffect(() => {\n    dispatch(loadingStart());\n    setTimeout(() => dispatch(loadingEnd()), 0);\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      {loading \n        ? <DNALoader/>\n        : <React.Fragment>\n            <Landing/>\n            <Upload/>\n          </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default App;","import * as types from './types';\n\nconst initialBaseState = {\n  loading: false,\n  error: null\n}\n\nexport const baseReducer = (state = initialBaseState, action) => {\n  switch (action.type) {\n    case types.LOADING_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.LOADING_END:\n      return {\n        ...state,\n        loading: false\n      };\n    case types.THROW_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nconst initialDataState = {\n  uploaded: false,\n  workbook: null,\n  sheet: null,\n  column: null,\n  uniprot_ids: [],\n  locations: [],\n  progress: 0\n}\n\nexport const dataReducer = (state = initialDataState, action) => {\n  switch (action.type) {\n    case types.UPLOAD_FILE:\n      return {\n        ...state,\n        uploaded: true,\n        workbook: (({Sheets, SheetNames}) => ({Sheets, SheetNames}))(action.payload)\n      };\n    case types.REMOVE_FILE:\n      return {\n        ...state,\n        uploaded: false,\n        workbook: null\n      };\n    case types.SELECT_SHEET:\n      return {\n        ...state,\n        sheet: action.payload\n      };\n    case types.REMOVE_SHEET:\n      return {\n        ...state,\n        sheet: null\n      };\n    case types.SELECT_COLUMN:\n      return {\n        ...state,\n        column: action.payload\n      };\n    case types.REMOVE_COLUMN:\n      return {\n        ...state,\n        column: null\n      };\n    case types.SET_UNIPROT_IDS:\n      return {\n        ...state,\n        uniprot_ids: action.payload\n      };\n    case types.GET_PROFILE:\n      return {\n        ...state,\n        locations: action.payload\n      };\n    case types.UPDATE_PROGRESS:\n      return {\n        ...state,\n        progress: action.payload\n      };\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux';\nimport * as reducers from './reducers';\n\nconst createRootReducer = () => combineReducers({\n  base: reducers.baseReducer,\n  data: reducers.dataReducer\n});\n\nexport default createRootReducer;","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './store/index';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nconst store = createStore(\n  createRootReducer(),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}