{"version":3,"sources":["assets/dna_loader.svg","components/DNALoader/DNALoader.jsx","assets/background_top.svg","assets/background_bottom.svg","components/Landing/Landing.jsx","components/Instructions/Instructions.jsx","store/types.js","store/reducers.js","store/index.js","store.js","store/actions.js","components/UploadButton/UploadButton.jsx","util.js","components/ParseExcel/ParseExcel.jsx","components/SubcellularLocations/SubcellularLocations.jsx","components/StartButton/StartButton.jsx","components/UniProtAPI/UniProtAPI.jsx","components/Profiler/Profiler.jsx","App.jsx","index.js"],"names":["DNALoader","Container","fluid","className","src","DNASpinner","alt","Landing","backgroundTop","to","smooth","duration","Button","backgroundBottom","Instructions","LOADING_START","LOADING_END","THROW_ERROR","UPLOAD_FILE","REMOVE_FILE","SELECT_SHEET","REMOVE_SHEET","SELECT_COLUMN","REMOVE_COLUMN","SELECT_LOCATIONS","SET_UNIPROT_IDS","START_REQUESTS","END_REQUESTS","UPDATE_PROGRESS","initialBaseState","loading","error","baseReducer","state","action","type","types","payload","initialExcelState","uploaded","workbook","sheet","column","excelReducer","Sheets","SheetNames","initialUniprotState","ids","locations","progress","in_progress","uniprotReducer","createRootReducer","combineReducers","base","reducers","excel","uniprot","store","createStore","composeWithDevTools","applyMiddleware","thunk","removeColumn","UploadButton","dispatch","useDispatch","hiddenFileInput","React","useRef","onClick","event","current","click","ref","onChange","reader","FileReader","onload","data","Uint8Array","target","result","XLSX","read","readAsArrayBuffer","files","uploadFile","accept","style","display","isDigit","c","ParseExcel","useSelector","empty","changeSheet","sheet_name","value","changeColumn","column_name","parseColumnIndex","column_index","i","slice","Form","Group","Control","as","map","index","Object","keys","v","SubcellularLocations","subcellular_locations","subcell","selected_list","selected_item","options","isObject","onSelect","onRemove","placeholder","StartButton","a","parseColumn","search","currStore","getState","worksheet","results","row","uniprot_id","locationString","length","axios","get","res","push","console","log","wsToExport","utils","aoa_to_sheet","wbToExport","book_new","book_append_sheet","writeFile","UniProtAPI","ProgressBar","now","Profiler","id","Fragment","App","useEffect","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0f4d158.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dna_loader.4c4bb697.svg\";","import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport DNASpinner from '../../assets/dna_loader.svg';\nimport './DNALoader.scss';\n\nconst DNALoader = () => (\n  <Container fluid className='loading'>\n    <img src={DNASpinner} alt='Spinning dotted DNA loader.'/>\n    <h6>Loading...</h6>\n  </Container>\n)\n\nexport default DNALoader;","export default __webpack_public_path__ + \"static/media/background_top.47af2133.svg\";","export default __webpack_public_path__ + \"static/media/background_bottom.6ad4e379.svg\";","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-scroll';\nimport backgroundTop from '../../assets/background_top.svg';\nimport backgroundBottom from '../../assets/background_bottom.svg';\nimport './Landing.scss';\n\nconst Landing = () => (\n  <div className='landing'>\n    <div className='background-top-container'>\n      <img src={backgroundTop} className = 'background-top' alt='Network graphic - top portion.'/>\n    </div>\n    <div className='landing-text'>\n      <h1>Automatic Proteomic Profiler</h1>\n      <p>An online tool for selecting proteins based on their subcellular location.</p>\n      <Link to='profiler' smooth={true} duration={500}>\n        <Button><h6>Get Started</h6></Button>\n      </Link>\n    </div>\n    <div className='background-bottom-container'>\n      <img src={backgroundBottom} className='background-bottom' alt='Network graphic - bottom portion.'/>\n    </div>\n  </div>\n)\n\nexport default Landing;","import React from 'react';\nimport './Instructions.scss';\n\nconst Instructions = () => (\n  <div className='instructions'>\n    <h1>How it Works</h1>\n    <ol>\n      <li>\n        <p>Upload an Excel spreadsheet containing the UniProt IDs of your genes of interest in a column.</p>\n      </li>\n      <li>\n        <p>Select the page and column in the spreadsheet containing the UniProt IDs</p>\n      </li>\n      <li>\n        <p>Select which subcellular locations you want to filter in the list</p>\n      </li>\n      <li>\n        <p>Run the program to save the column marking the genes that fit your criteria!</p>\n      </li>\n    </ol>\n  </div>\n);\n\nexport default Instructions;","export const LOADING_START = 'LOADING_START';\nexport const LOADING_END = 'LOADING_END';\nexport const THROW_ERROR = 'THROW_ERROR';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\nexport const REMOVE_FILE = 'REMOVE_FILE';\nexport const SELECT_SHEET = 'SELECT_SHEET';\nexport const REMOVE_SHEET = 'REMOVE_SHEET';\nexport const SELECT_COLUMN = 'SELECT_COLUMN';\nexport const REMOVE_COLUMN = 'REMOVE_COLUMN';\nexport const SELECT_LOCATIONS = 'SELECT_LOCATIONS';\nexport const SET_UNIPROT_IDS = 'SET_UNIPROT_IDS';\nexport const START_REQUESTS = 'START_REQUESTS';\nexport const END_REQUESTS = 'END_REQUESTS';\nexport const UPDATE_PROGRESS = 'UPDATE_PROGRESS';","import * as types from './types';\n\nconst initialBaseState = {\n  loading: false,\n  error: null\n}\n\nexport const baseReducer = (state = initialBaseState, action) => {\n  switch (action.type) {\n    case types.LOADING_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.LOADING_END:\n      return {\n        ...state,\n        loading: false\n      };\n    case types.THROW_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nconst initialExcelState = {\n  uploaded: false,\n  workbook: null,\n  sheet: null,\n  column: null\n}\n\nexport const excelReducer = (state = initialExcelState, action) => {\n  switch (action.type) {\n    case types.UPLOAD_FILE:\n      return {\n        ...state,\n        uploaded: true,\n        workbook: (({Sheets, SheetNames}) => ({Sheets, SheetNames}))(action.payload)\n      };\n    case types.REMOVE_FILE:\n      return {\n        ...state,\n        uploaded: false,\n        workbook: null\n      };\n    case types.SELECT_SHEET:\n      return {\n        ...state,\n        sheet: action.payload\n      };\n    case types.REMOVE_SHEET:\n      return {\n        ...state,\n        sheet: null\n      };\n    case types.SELECT_COLUMN:\n      return {\n        ...state,\n        column: action.payload\n      };\n    case types.REMOVE_COLUMN:\n      return {\n        ...state,\n        column: null\n      };\n    default:\n      return state; \n  }\n}\n\nconst initialUniprotState = {\n  ids: [],\n  locations: [],\n  progress: 0,\n  in_progress: false\n}\n\nexport const uniprotReducer = (state = initialUniprotState, action) => {\n  switch (action.type) {\n    case types.SELECT_LOCATIONS:\n      return {\n        ...state,\n        locations: action.payload\n      };\n    case types.SET_UNIPROT_IDS:\n      return {\n        ...state,\n        ids: action.payload\n      };\n    case types.START_REQUESTS:\n      return {\n        ...state,\n        in_progress: true\n      };\n    case types.END_REQUESTS:\n      return {\n        ...state,\n        in_progress: false\n      };\n    case types.UPDATE_PROGRESS:\n      return {\n        ...state,\n        progress: action.payload\n      };\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux';\nimport * as reducers from './reducers';\n\nconst createRootReducer = () => combineReducers({\n  base: reducers.baseReducer,\n  excel: reducers.excelReducer,\n  uniprot: reducers.uniprotReducer\n});\n\nexport default createRootReducer;","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './store/index';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nconst store = createStore(\n  createRootReducer(),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","import axios from 'axios';\nimport XLSX from 'xlsx';\nimport store from '../store';\nimport * as types from './types';\n\nexport const loadingStart = () => ({\n  type: types.LOADING_START\n});\n\nexport const loadingEnd = () => ({\n  type: types.LOADING_END\n});\n\nexport const throwError = error => ({\n  type: types.THROW_ERROR,\n  payload: error\n});\n\nexport const uploadFile = event => dispatch => {\n  const reader = new FileReader();\n  reader.onload = event => {\n    const data = new Uint8Array(event.target.result);\n    const workbook = XLSX.read(data, {type: 'array'});\n    dispatch({\n      type: types.UPLOAD_FILE,\n      payload: workbook\n    });\n  }\n  reader.readAsArrayBuffer(event.target.files[0]);\n}\n\nexport const selectSheet = sheet_name => ({\n  type: types.SELECT_SHEET,\n  payload: sheet_name\n});\n\nexport const removeSheet = () => ({\n  type: types.REMOVE_SHEET\n});\n\nexport const selectColumn = column_name => ({\n  type: types.SELECT_COLUMN,\n  payload: column_name\n});\n\nexport const removeColumn = () => ({\n  type: types.REMOVE_COLUMN\n});\n\nexport const selectLocations = locations => ({\n  type: types.SELECT_LOCATIONS,\n  payload: locations\n});\n\nexport const startRequests = () => ({\n  type: types.START_REQUESTS\n});\n\nexport const endRequests = () => ({\n  type: types.END_REQUESTS\n});\n\nexport const updateProgress = progress => ({\n  type: types.UPDATE_PROGRESS,\n  payload: progress\n});\n\nexport const processRequests = () => async(dispatch) => {\n  dispatch(startRequests());\n\n  const parseColumn = column_name => column_name.slice(0, column_name.search(':'));\n  // get the column number\n  const currStore = store.getState()\n  const sheet = currStore.excel.sheet;\n  const column = parseColumn(currStore.excel.column);\n  const worksheet = currStore.excel.workbook.Sheets[sheet];\n  const locations = currStore.uniprot.locations;\n\n  let results = [['UniProt ID', 'Subcellular Location']];\n  let row = 2;\n  while (worksheet[`${column}${row}`]) {\n    let uniprot_id = worksheet[`${column}${row}`].v;\n    let locationString = '';\n    for (let i = 0; i < locations.length; ++i) {\n      if (!i) {\n        locationString += `location:\"${locations[i]}\"`;\n      } else {\n        locationString += `+OR+location:\"${locations[i]}\"`;\n      }\n    }\n    \n    try {\n      let res = await axios.get(`https://www.uniprot.org/uniprot/?query=locations:(${locationString})+AND+id:${uniprot_id}&format=tab&columns=id,comment(SUBCELLULAR LOCATION)&limit=1`);\n      let data = res.data !== \"\" ? res.data.slice(res.data.search(':') + 2, -1) : '';\n      results.push([uniprot_id, data]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      dispatch(updateProgress(++row - 1));\n    }\n  }\n  let wsToExport = XLSX.utils.aoa_to_sheet(results);\n  let wbToExport = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(wbToExport, wsToExport, 'locations');\n  XLSX.writeFile(wbToExport, 'results.xlsx');\n  dispatch(endRequests());\n}","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {uploadFile} from '../../store/actions';\nimport Button from 'react-bootstrap/Button';\nimport './UploadButton.scss';\n\nconst UploadButton = () => {\n  const dispatch = useDispatch();\n  const hiddenFileInput = React.useRef(null);\n\n  return (\n    <div className='upload-form'>\n      <Button className='upload-button' onClick={event => hiddenFileInput.current.click()}>\n        <h6>Upload a File</h6>\n        <input\n          type='file'\n          ref={hiddenFileInput}\n          onChange={event => dispatch(uploadFile(event))}\n          accept='.xls, .xlsx, .xlsm'\n          style={{display: 'none'}}\n        />\n      </Button>\n    </div>\n  );\n}\n\nexport default UploadButton;","export const isDigit = c => c >= '0' && c <= '9';","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux'\nimport Form from 'react-bootstrap/Form';\nimport {selectSheet, removeSheet, selectColumn, removeColumn} from '../../store/actions';\nimport {isDigit} from '../../util';\nimport './ParseExcel.scss';\n\nconst ParseExcel = () => {\n  const dispatch = useDispatch();\n  const workbook = useSelector(state => state.excel.workbook);\n  const sheet = useSelector(state => state.excel.sheet);\n  \n  const empty = '- - -';\n  const changeSheet = event => {\n    dispatch(removeColumn());\n    if (event.target.value === empty) {\n      dispatch(removeSheet());\n    } else {\n      dispatch(selectSheet(event.target.value));\n    }\n  }\n  const changeColumn = event => {\n    if (event.target.value === empty) {\n      dispatch(removeColumn());\n    } else {\n      dispatch(selectColumn(event.target.value));\n    }\n  }\n  const parseColumnIndex = column_index => {\n    let i = 0;\n    while (!isDigit(column_index[i])) ++i;\n    return column_index.slice(0, i);\n  }\n\n  return (\n    <div className='parse-excel'>\n      <div className='choose-sheet'>\n        <h4>Choose a Sheet</h4>\n        <Form>\n          <Form.Group>\n            <Form.Control as='select' onChange={event => changeSheet(event)}>\n              <option>{empty}</option>\n              {workbook.SheetNames.map((sheet_name, index) => (\n                <option key={index}>{sheet_name}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      </div>\n      {sheet && <div className='choose-column'>\n        <h4>Choose the Column Containing the UniProt IDs</h4>\n        <Form>\n          <Form.Group>\n            <Form.Control as='select' onChange={event => changeColumn(event)}>\n              <option>{empty}</option>\n              {Object.keys(workbook.Sheets[sheet]).map((column_index, index) => (\n                column_index.slice(-1) === '1' && !isDigit(column_index.slice(-2, -1))\n                  ? <option key={column_index}>\n                      {`${parseColumnIndex(column_index)}: ${workbook.Sheets[sheet][column_index].v}`}\n                    </option>\n                  : null\n              ))}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      </div>\n      }\n    </div>   \n  );\n}\n\nexport default ParseExcel;","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {selectLocations} from '../../store/actions';\nimport {Multiselect} from 'multiselect-react-dropdown';\nimport subcell from './subcell.json';\nimport './SubcellularLocations.scss';\n\nconst SubcellularLocations = () => {\n  const dispatch = useDispatch();\n  const subcellular_locations = subcell.locations;\n\n  const onChange = (selected_list, selected_item) => dispatch(selectLocations(selected_list))\n\n  return (\n    <div className='choose-subcell-locations'>\n      <h4>Select Which Subcellular Locations to Filter</h4>\n      <p>For example, if you select \"Cell Membrane\" and \"Golgi Apparatus\", the program will highlight the proteins that are localized in the cell membrane or the golgi apparatus, and leave all of the other proteins in your list blank.</p>\n      <Multiselect \n        options={subcellular_locations}\n        isObject={false}\n        onSelect={onChange}\n        onRemove={onChange}\n        placeholder='Select Locations...'\n      />\n    </div>\n  )\n}\n\nexport default SubcellularLocations;","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {processRequests} from '../../store/actions';\nimport Button from 'react-bootstrap/Button';\nimport './StartButton.scss';\n\nconst StartButton = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className='start-button-container'>\n      <Button className='start-button' onClick={() => dispatch(processRequests())}>\n        <h6>Run the Program</h6>\n      </Button>\n    </div>\n  );\n}\n\nexport default StartButton;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport SubcellularLocations from '../SubcellularLocations/SubcellularLocations';\nimport StartButton from '../StartButton/StartButton';\nimport './UniProtAPI.scss';\n\nconst UniProtAPI = () => {\n  const in_progress = useSelector(state => state.uniprot.in_progress);\n  const progress = useSelector(state => state.uniprot.progress);\n  const locations = useSelector(state => state.uniprot.locations);\n\n  return (\n    <div className='uniprot-api'>\n      <SubcellularLocations/>\n      {in_progress\n        ? <ProgressBar now={progress}/>\n        : locations.length\n          ? <StartButton/>\n          : null\n      }\n    </div>\n  )\n}\n\nexport default UniProtAPI;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport Instructions from '../Instructions/Instructions';\nimport UploadButton from '../UploadButton/UploadButton';\nimport ParseExcel from '../ParseExcel/ParseExcel';\nimport UniProtAPI from '../UniProtAPI/UniProtAPI';\nimport './Profiler.scss';\n\nconst Profiler = () => {\n  const uploaded = useSelector(state => state.excel.uploaded);\n  const column = useSelector(state => state.excel.column);\n\n  return (\n    <div className='profiler' id='profiler'>\n      <Instructions/>\n      {!uploaded\n        ? <UploadButton/>\n        : <React.Fragment>\n            <ParseExcel/>\n            {column !== null && <UniProtAPI/>}\n          </React.Fragment>\n      }\n    </div>\n  )\n}\n\nexport default Profiler;","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport DNALoader from './components/DNALoader/DNALoader';\nimport Landing from './components/Landing/Landing';\nimport Profiler from './components/Profiler/Profiler';\nimport './App.scss';\nimport {loadingStart, loadingEnd} from './store/actions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.base.loading);\n\n  useEffect(() => {\n    dispatch(loadingStart());\n    setTimeout(() => dispatch(loadingEnd()), 2500);\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      {loading \n        ? <DNALoader/>\n        : <React.Fragment>\n            <Landing/>\n            <Profiler/>\n          </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}