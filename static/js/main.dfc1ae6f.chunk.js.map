{"version":3,"sources":["assets/dna_loader.svg","components/DNALoader/DNALoader.jsx","assets/background_top.svg","assets/background_bottom.svg","components/Landing/Landing.jsx","store/types.js","App.js","store/actions.js","store/reducers.js","store/index.js","store.js","index.js"],"names":["DNALoader","Container","fluid","className","src","DNASpinner","alt","Landing","backgroundTop","Button","size","backgroundBottom","LOADING_START","LOADING_END","ERROR","App","dispatch","useDispatch","loading","useSelector","state","base","useEffect","type","types","setTimeout","Fragment","initialBaseState","error","baseReducer","action","payload","createRootReducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"+PAAe,MAA0B,uCCY1BA,G,MAPG,kBAChB,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,UAA3B,UACE,qBAAKC,IAAKC,EAAYC,IAAI,gCAC1B,iD,QCRW,MAA0B,2CCA1B,MAA0B,8CCsB1BC,G,MAhBC,kBACd,sBAAKJ,UAAU,UAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,qBAAKC,IAAKI,EAAeL,UAAY,iBAAiBG,IAAI,qCAE5D,sBAAKH,UAAU,eAAf,UACE,8DACA,2GACA,cAACM,EAAA,EAAD,CAAQC,KAAK,KAAb,SAAkB,kDAEpB,qBAAKP,UAAU,8BAAf,SACE,qBAAKC,IAAKO,EAAkBR,UAAU,oBAAoBG,IAAI,6CCjBvDM,G,MAAgB,iBAChBC,EAAc,cACdC,EAAQ,QC0BNC,EArBH,WACV,IAAMC,EAAWC,cACXC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,WAOhD,OALAI,qBAAU,WACRN,ECV+B,CACjCO,KAAMC,IDUJC,YAAW,kBAAMT,ECPY,CAC/BO,KAAMC,MDMqC,OACxC,CAACR,IAGF,cAAC,IAAMU,SAAP,UACGR,EACG,cAAC,EAAD,IACA,cAAC,IAAMQ,SAAP,UACE,cAAC,EAAD,S,sBEnBNC,EAAmB,CACvBT,SAAS,EACTU,MAAO,MAGIC,EAAc,WAAuC,IAAtCT,EAAqC,uDAA7BO,EAAkBG,EAAW,uCAC/D,OAAQA,EAAOP,MACb,KAAKC,EACH,OAAO,2BACFJ,GADL,IAEEF,SAAS,IAEb,KAAKM,EACH,OAAO,2BACFJ,GADL,IAEEF,SAAS,IAEb,KAAKM,EACH,OAAO,2BACFJ,GADL,IAEEQ,MAAOE,EAAOC,UAElB,QACE,OAAOX,IClBEY,EAJW,kBAAMC,0BAAgB,CAC9CZ,KAAMa,K,QCMOC,EALDC,sBACZJ,IACAK,8BAAoBC,0BAAgBC,OCDtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.dfc1ae6f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dna_loader.4c4bb697.svg\";","import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport DNASpinner from '../../assets/dna_loader.svg';\nimport './DNALoader.scss';\n\nconst DNALoader = () => (\n  <Container fluid className='loading'>\n    <img src={DNASpinner} alt='Spinning dotted DNA loader.'/>\n    <h6>Loading...</h6>\n  </Container>\n)\n\nexport default DNALoader;","export default __webpack_public_path__ + \"static/media/background_top.47af2133.svg\";","export default __webpack_public_path__ + \"static/media/background_bottom.6ad4e379.svg\";","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport backgroundTop from '../../assets/background_top.svg';\nimport backgroundBottom from '../../assets/background_bottom.svg';\nimport './Landing.scss';\n\nconst Landing = () => (\n  <div className='landing'>\n    <div className='background-top-container'>\n      <img src={backgroundTop} className = 'background-top' alt='Network graphic - top portion.'/>\n    </div>\n    <div className='landing-text'>\n      <h1>Automatic Proteomic Profiler</h1>\n      <p>An online tool for selecting proteins based on their subcellular location.</p>\n      <Button size='sm'><h6>Get Started</h6></Button>\n    </div>\n    <div className='background-bottom-container'>\n      <img src={backgroundBottom} className='background-bottom' alt='Network graphic - bottom portion.'/>\n    </div>\n  </div>\n)\n\nexport default Landing;","export const LOADING_START = 'LOADING_START';\nexport const LOADING_END = 'LOADING_END';\nexport const ERROR = 'ERROR';","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport DNALoader from './components/DNALoader/DNALoader';\nimport Landing from './components/Landing/Landing';\nimport './App.scss';\nimport {loadingStart, loadingEnd} from './store/actions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.base.loading);\n\n  useEffect(() => {\n    dispatch(loadingStart());\n    setTimeout(() => dispatch(loadingEnd()), 2000);\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      {loading \n        ? <DNALoader/>\n        : <React.Fragment>\n            <Landing/>\n          </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default App;","import * as types from './types';\n\nexport const loadingStart = () => ({\n  type: types.LOADING_START\n});\n\nexport const loadingEnd = () => ({\n  type: types.LOADING_END\n});\n\nexport const throwError = error => ({\n  type: types.ERROR,\n  payload: error\n});","import * as types from './types';\n\nconst initialBaseState = {\n  loading: false,\n  error: null\n}\n\nexport const baseReducer = (state = initialBaseState, action) => {\n  switch (action.type) {\n    case types.LOADING_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.LOADING_END:\n      return {\n        ...state,\n        loading: false\n      };\n    case types.ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux';\nimport * as reducers from './reducers';\n\nconst createRootReducer = () => combineReducers({\n  base: reducers.baseReducer\n});\n\nexport default createRootReducer;","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './store/index';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nconst store = createStore(\n  createRootReducer(),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}